(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{878:function(v,e,_){"use strict";_.r(e);var t=_(72),r=Object(t.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"redis-快速入门"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-快速入门"}},[v._v("#")]),v._v(" redis 快速入门")]),v._v(" "),_("h2",{attrs:{id:"redis-命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-命令"}},[v._v("#")]),v._v(" Redis 命令")]),v._v(" "),_("p",[v._v("启动服务端命令："),_("code",[v._v("redis-server /etc/redis/redis.conf")]),v._v("\n启动客户端命令："),_("code",[v._v("redis-cli")]),v._v(" ;")]),v._v(" "),_("h2",{attrs:{id:"redis-键-key"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-键-key"}},[v._v("#")]),v._v(" Redis 键(key)")]),v._v(" "),_("p",[v._v("语法\nRedis 键命令的基本语法如下：")]),v._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[v._v("redis "),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("127.0")]),v._v(".0.1:637"),_("span",{pre:!0,attrs:{class:"token operator"}},[_("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[v._v("9")]),v._v(">")]),v._v(" COMMAND KEY_NAME "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("VALUE_NAME"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("实例")]),v._v(" "),_("div",{staticClass:"language-redis line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("redis 127.0.0.1:6379> SET Yexk redis\nOK\nredis 127.0.0.1:6379> DEL Yexk\n(integer) 1\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br")])]),_("p",[v._v("在以上实例中 DEL 是一个命令， "),_("code",[v._v("Yexk")]),v._v(" 是一个键。 如果键被删除成功，命令执行后输出 "),_("code",[v._v("(integer) 1")]),v._v("，否则将输出 "),_("code",[v._v("(integer) 0")]),v._v("。")]),v._v(" "),_("h2",{attrs:{id:"redis-字符串-string"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-字符串-string"}},[v._v("#")]),v._v(" Redis 字符串(String)")]),v._v(" "),_("blockquote",[_("p",[v._v("Redis 字符串数据类型的相关命令用于管理 redis 字符串值。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("命令")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("增")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("SET key value")]),_("br"),v._v("2."),_("code",[v._v("SETNX key value")]),_("br"),v._v("3."),_("code",[v._v("SETEX key seconds value")])]),v._v(" "),_("td",[v._v("1.设置指定 "),_("code",[v._v("key")]),v._v(" 的值"),_("br"),v._v("2.只有在 "),_("code",[v._v("key")]),v._v(" 不存在时设置 "),_("code",[v._v("key")]),v._v(" 的值"),_("br"),v._v("3.将值 value 关联到 "),_("code",[v._v("key")]),v._v(" ，并将 "),_("code",[v._v("key")]),v._v(" 的过期时间设为 "),_("code",[v._v("seconds")]),v._v(" (以秒为单位)")])]),v._v(" "),_("tr",[_("td",[v._v("删")]),v._v(" "),_("td",[_("code",[v._v("GET key")])]),v._v(" "),_("td",[v._v("删除指定 "),_("code",[v._v("key")]),v._v(" 的值")])]),v._v(" "),_("tr",[_("td",[v._v("改")]),v._v(" "),_("td",[v._v("同 操作"),_("code",[v._v("增")]),_("br"),v._v("1."),_("code",[v._v("GETSET key value")]),_("br"),v._v("2."),_("code",[v._v("INCR key")]),_("br"),v._v("3."),_("code",[v._v("DECR key")]),_("br"),v._v("4."),_("code",[v._v("INCRBY key increment")]),_("br"),v._v("5."),_("code",[v._v("DECRBY key decrement")]),_("br"),v._v("6."),_("code",[v._v("APPEND key value")])]),v._v(" "),_("td",[_("br"),v._v("1.将给定 "),_("code",[v._v("key")]),v._v(" 的值设为 "),_("code",[v._v("value")]),v._v(" ，并返回 "),_("code",[v._v("key")]),v._v(" 的旧值(old value) "),_("br"),v._v("2.将 key 中储存的数字值增一"),_("br"),v._v("3.将 key 中储存的数字值减一"),_("br"),v._v("4.将 key 所储存的值加上给定的增量值（increment）"),_("br"),v._v("5.key 所储存的值减去给定的减量值（decrement）"),_("br"),v._v("6.如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。")])]),v._v(" "),_("tr",[_("td",[v._v("查")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("GET key")]),v._v(" "),_("br"),v._v(" 2."),_("code",[v._v("GETRANGE key start end")]),_("br"),v._v("3."),_("code",[v._v("MGET key1 [key2..]")]),_("br"),v._v("4."),_("code",[v._v("EXISTS key [key ...]")])]),v._v(" "),_("td",[v._v("1.获取指定 key 的值 "),_("br"),v._v(" 2.返回 key 中字符串值的子字符 "),_("br"),v._v("3.获取所有(一个或多个)给定 key 的值"),_("br"),v._v("4.判断 "),_("code",[v._v("key")]),v._v(" 是否存在，存在返回1。多个"),_("code",[v._v("key")]),v._v("判断存在则计算总数并返回")])])])]),v._v(" "),_("h2",{attrs:{id:"redis-哈希-hash"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-哈希-hash"}},[v._v("#")]),v._v(" Redis 哈希(Hash)")]),v._v(" "),_("blockquote",[_("p",[v._v("Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。\nRedis 中每个 hash 可以存储 232 - 1 键值对（40多亿）。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("命令")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("增")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("HMSET key field1 value1 [field2 value2 ]")]),_("br"),v._v("2."),_("code",[v._v("HSET key field value")]),_("br"),v._v("3."),_("code",[v._v("HSETNX key field value")])]),v._v(" "),_("td",[v._v("1.同时将多个 field-value (域-值)对设置到哈希表 key 中"),_("br"),v._v("2.将哈希表 key 中的字段 field 的值设为 value"),_("br"),v._v("3.只有在字段 field 不存在时，设置哈希表字段的值")])]),v._v(" "),_("tr",[_("td",[v._v("删")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("HDEL key field2 [field2]")])]),v._v(" "),_("td",[v._v("1.删除一个或多个哈希表字段")])]),v._v(" "),_("tr",[_("td",[v._v("改")]),v._v(" "),_("td",[v._v("同 操作"),_("code",[v._v("增")]),_("br"),v._v("1."),_("code",[v._v("HINCRBY key field increment")]),_("br"),v._v("2."),_("code",[v._v("HINCRBYFLOAT key field increment")])]),v._v(" "),_("td",[_("br"),v._v("1. 为哈希表 "),_("code",[v._v("key")]),v._v(" 中的指定字段的整数值加上增量 "),_("code",[v._v("increment")]),v._v(" "),_("br"),v._v("2.为哈希表 "),_("code",[v._v("key")]),v._v(" 中的指定字段的浮点数值加上增量 "),_("code",[v._v("increment")])])]),v._v(" "),_("tr",[_("td",[v._v("查")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("HEXISTS key field")]),v._v(" "),_("br"),v._v("2."),_("code",[v._v("HGET key field")]),_("br"),v._v("3."),_("code",[v._v("HKEYS key")]),_("br"),v._v("4."),_("code",[v._v("HVALS key")]),_("br"),v._v("5."),_("code",[v._v("HLEN key")]),_("br"),v._v("6."),_("code",[v._v("HGETALL key")])]),v._v(" "),_("td",[v._v("1.查看哈希表 "),_("code",[v._v("key")]),v._v(" 中，指定的字段是否存在"),_("br"),v._v("2.获取存储在哈希表中指定字段的值"),_("br"),v._v("3.获取所有哈希表中的"),_("strong",[v._v("字段")]),_("br"),v._v("3.获取所有哈希表中的"),_("strong",[v._v("值")]),_("br"),v._v("4.获取哈希表中字段的数量"),_("br"),v._v("5.获取在哈希表中指定 "),_("code",[v._v("key")]),v._v(" 的所有字段和值")])])])]),v._v(" "),_("h2",{attrs:{id:"redis-列表-list"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-列表-list"}},[v._v("#")]),v._v(" Redis 列表(List)")]),v._v(" "),_("blockquote",[_("p",[v._v("Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）\n一个列表最多可以包含 232 - 1 个元素 (4294967295, 每个列表超过40亿个元素)。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("命令")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("增")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("LPUSH key value1 [value2]")]),_("br"),v._v("2."),_("code",[v._v("RPUSH key value1 [value2]")]),_("br"),v._v("3."),_("code",[v._v("LPUSHX key value")]),_("br"),v._v("4."),_("code",[v._v("RPUSHX key value")]),_("br"),v._v("5."),_("code",[v._v("LSET key index value")])]),v._v(" "),_("td",[v._v("1.将一个或多个值插入到列表"),_("strong",[v._v("头部")]),_("br"),v._v("2.将一个或多个值插入到列表"),_("strong",[v._v("尾部")]),_("br"),v._v("3.将一个值插入到已存在的列表"),_("strong",[v._v("头部")]),v._v(",如果不存在则插入失败。"),_("br"),v._v("4.将一个值插入到已存在的列表"),_("strong",[v._v("尾部")]),v._v(",如果不存在则插入失败"),_("br"),v._v("5.通过索引设置列表元素的值")])]),v._v(" "),_("tr",[_("td",[v._v("删")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("LPOP key")]),_("br"),v._v("2."),_("code",[v._v("RPOP key")]),_("br"),v._v("3."),_("code",[v._v("BLPOP key1 [key2 ] timeout")]),_("br"),v._v("4."),_("code",[v._v("BRPOP key1 [key2 ] timeout")]),_("br"),v._v("5."),_("code",[v._v("LREM key count value")]),_("br"),v._v("6."),_("code",[v._v("LTRIM key start stop")]),_("br"),v._v("7."),_("code",[v._v("RPOPLPUSH source destination")]),_("br"),v._v("8."),_("code",[v._v("BRPOPLPUSH source destination timeout")]),_("br"),v._v("9."),_("code",[v._v("LINSERT key BEFORE|AFTER pivot value")])]),v._v(" "),_("td",[v._v("1.移出并获取列表的第一个元素"),_("br"),v._v("2.移除并获取列表最后一个元素"),_("br"),v._v("3.移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止"),_("br"),v._v("4.移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止"),_("br"),v._v("5.移除列表元素"),_("br"),v._v("6.对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。"),_("br"),v._v("7.移除列表的最后一个元素，并将该元素添加到另一个列表并返回"),_("br"),v._v("8.从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止"),_("br"),v._v("9.在列表的元素前或者后插入元素")])]),v._v(" "),_("tr",[_("td",[v._v("改")]),v._v(" "),_("td",[v._v("同 操作"),_("code",[v._v("增")]),v._v("、"),_("code",[v._v("删")])]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("查")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("LRANGE key start stop")]),_("br"),v._v("2."),_("code",[v._v("LINDEX key index")]),_("br"),v._v("3."),_("code",[v._v("LLEN key")])]),v._v(" "),_("td",[v._v("1.获取列表指定范围内的元素"),_("br"),v._v("2.通过索引获取列表中的元素"),_("br"),v._v("3.获取列表长度")])])])]),v._v(" "),_("h2",{attrs:{id:"redis-集合-set"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-集合-set"}},[v._v("#")]),v._v(" Redis 集合(Set)")]),v._v(" "),_("blockquote",[_("p",[v._v("Redis的Set是string类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。\nRedis 中 集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。\n集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("命令")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("增")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("SADD key member1 [member2]")]),_("br"),v._v("2."),_("code",[v._v("SUNIONSTORE destination key1 [key2]")]),_("br"),v._v("3."),_("code",[v._v("SSCAN key cursor [MATCH pattern] [COUNT count]")])]),v._v(" "),_("td",[v._v("1.向集合添加一个或多个成员"),_("br"),v._v("2.所有给定集合的并集存储在 destination 集合中"),_("br"),v._v("3.迭代集合中的元素")])]),v._v(" "),_("tr",[_("td",[v._v("删")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("SPOP key")]),_("br"),v._v("2."),_("code",[v._v("SREM key member1 [member2]")])]),v._v(" "),_("td",[v._v("1.移除并返回集合中的一个随机元素"),_("br"),v._v("2.移除集合中一个或多个成员")])]),v._v(" "),_("tr",[_("td",[v._v("改")]),v._v(" "),_("td",[v._v("同"),_("code",[v._v("增")]),_("br"),v._v("1."),_("code",[v._v("SMOVE source destination member")])]),v._v(" "),_("td",[v._v("1.将 "),_("code",[v._v("member")]),v._v(" 元素从 "),_("code",[v._v("source")]),v._v(" 集合移动到 "),_("code",[v._v("destination")]),v._v(" 集合")])]),v._v(" "),_("tr",[_("td",[v._v("查")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("SMEMBERS key")]),_("br"),v._v("2."),_("code",[v._v("SDIFF key1")]),_("br"),v._v("3."),_("code",[v._v("SINTER key1 [key2]")]),_("br"),v._v("4."),_("code",[v._v("SUNION key1 [key2]")]),_("br"),v._v("5."),_("code",[v._v("SRANDMEMBER key [count]")]),_("br"),v._v("6."),_("code",[v._v("SDIFFSTORE destination key1 [key2]")]),_("br"),v._v("7."),_("code",[v._v("SINTERSTORE destination key1 [key2]")]),_("br"),v._v("8."),_("code",[v._v("SCARD key")]),_("br"),v._v("9."),_("code",[v._v("SISMEMBER key member")])]),v._v(" "),_("td",[v._v("1.返回集合中的所有成员"),_("br"),v._v("2.返回给定所有集合的"),_("strong",[v._v("差集")]),_("br"),v._v("3.返回给定所有集合的"),_("strong",[v._v("交集")]),_("br"),v._v("4.返回所有给定集合的"),_("strong",[v._v("并集")]),_("br"),v._v("5.返回集合中一个或多个随机数"),_("br"),v._v("6.返回给定所有集合的"),_("strong",[v._v("差集")]),v._v("并存储在 destination 中"),_("br"),v._v("7.返回给定所有集合的"),_("strong",[v._v("交集")]),v._v("并存储在 destination 中"),_("br"),v._v("8.获取集合的成员数(长度) "),_("br"),v._v("9.判断 "),_("code",[v._v("member")]),v._v(" 元素是否是集合 "),_("code",[v._v("key")]),v._v(" 的成员")])])])]),v._v(" "),_("h2",{attrs:{id:"redis-有序集合-sorted-set"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis-有序集合-sorted-set"}},[v._v("#")]),v._v(" Redis 有序集合(sorted set)")]),v._v(" "),_("blockquote",[_("p",[v._v("Redis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。\n有序集合的成员是唯一的,但分数(score)却可以重复。\n集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。")])]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("命令")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("增")]),v._v(" "),_("td"),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("删")]),v._v(" "),_("td"),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("改")]),v._v(" "),_("td"),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("查")]),v._v(" "),_("td",[v._v("1."),_("code",[v._v("ZCARD key")]),_("br"),v._v(" 2."),_("code",[v._v("ZCOUNT key min max")]),_("br"),v._v(" 3."),_("code",[v._v("ZINTERSTORE destination numkeys key [key ...]")]),_("br"),v._v(" 4."),_("code",[v._v("ZLEXCOUNT key min max")]),_("br"),v._v(" 5."),_("code",[v._v("ZRANGE key start stop [WITHSCORES]")]),_("br"),v._v(" 6."),_("code",[v._v("ZRANGEBYLEX key min max [LIMIT offset count]")]),_("br"),v._v(" 7."),_("code",[v._v("ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]")]),_("br"),v._v(" 8."),_("code",[v._v("ZRANK key member")]),_("br"),v._v(" 9."),_("code",[v._v("ZREVRANGE key start stop [WITHSCORES]")]),_("br"),v._v(" 10."),_("code",[v._v("ZREVRANGEBYSCORE key max min [WITHSCORES]")]),_("br"),v._v(" 11."),_("code",[v._v("ZREVRANK key member")]),_("br"),v._v(" 12."),_("code",[v._v("ZSCORE key member")])]),v._v(" "),_("td",[v._v("1.获取有序集合的成员数"),_("br"),v._v(" 2.计算在有序集合中指定区间分数的成员数"),_("br"),v._v(" 3.计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中"),_("br"),v._v(" 4.在有序集合中计算指定字典区间内成员数量"),_("br"),v._v(" 5.通过索引区间返回有序集合成指定区间内的成员"),_("br"),v._v(" 6.通过字典区间返回有序集合的成员"),_("br"),v._v(" 7.通过分数返回有序集合指定区间内的成员"),_("br"),v._v(" 8.返回有序集合中指定成员的索引"),_("br"),v._v(" 9.返回有序集中指定区间内的成员，通过索引，分数从高到底"),_("br"),v._v(" 10.返回有序集中指定分数区间内的成员，分数从高到低排序"),_("br"),v._v(" 11.返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序"),_("br"),v._v(" 12.返回有序集中，成员的分数值")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);