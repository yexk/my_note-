(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{888:function(e,t,r){"use strict";r.r(t);var n=r(72),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"第三十一期-高效软件开发团队的-4-个习惯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三十一期-高效软件开发团队的-4-个习惯"}},[e._v("#")]),e._v(" 第三十一期: 高效软件开发团队的 4 个习惯")]),e._v(" "),r("h2",{attrs:{id:"行内新闻"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#行内新闻"}},[e._v("#")]),e._v(" 行内新闻")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.infoq.cn/article/517kFYONBzB8ba5vPeS0",target:"_blank",rel:"noopener noreferrer"}},[e._v("高效软件开发团队的 4 个习惯"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.infoq.cn/article/tiM3ZxIbxyMzT4LsA23s",target:"_blank",rel:"noopener noreferrer"}},[e._v("AI 芯片百家争鸣，谁能走到最后？"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.infoq.cn/article/f6BU2EUSqDlC3kRLfg87",target:"_blank",rel:"noopener noreferrer"}},[e._v("企业数据能力测评：认清现状，布局未来"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.infoq.cn/article/NHKSwrcPb8zVtRDSYXXB",target:"_blank",rel:"noopener noreferrer"}},[e._v("攻坚计算产业下一站，华为联合 18 城鲲鹏创新中心聚力打造开发者创享日"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://xie.infoq.cn/article/f0a6ad06b3bfbda60f4330bee",target:"_blank",rel:"noopener noreferrer"}},[e._v("B 站新一代 golang 规则引擎的设计与实现"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"前端技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端技术"}},[e._v("#")]),e._v(" 前端技术")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://juejin.im/post/5ef8377f6fb9a07e693a6061",target:"_blank",rel:"noopener noreferrer"}},[e._v("由浅入深，66条JavaScript面试知识点"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("如果有每一期看的小伙伴应该发现了。其实这是上期的推荐。这期也拿过来。因为里面知识点确实有点多。慢慢看。")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://juejin.im/post/5efc8c9f6fb9a07e8c6891cc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue、Nuxt服务端渲染、NodeJS全栈项目~面向小白的完美系统~"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://xie.infoq.cn/article/2051e9a2e76e80393353d826a",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nginx 从入门到实践，万字详解!"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/313971223/answer/628236155",target:"_blank",rel:"noopener noreferrer"}},[e._v("为什么很多web项目还是使用 px，而不是 rem？"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000023086183",target:"_blank",rel:"noopener noreferrer"}},[e._v("apply 和 call 的区别"),r("OutboundLink")],1)])])]),e._v(" "),r("h2",{attrs:{id:"后端技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后端技术"}},[e._v("#")]),e._v(" 后端技术")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.infoq.cn/article/w6eBhlOJRw963TcY9MsE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis 之父退出开源项目维护：人生苦短不想上班"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.infoq.cn/article/eQ7xA8cN7S9ictXc5isX",target:"_blank",rel:"noopener noreferrer"}},[e._v("百分点大规模文件存储 OSS 技术与实践"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.infoq.cn/article/hN269hweMDEPTwxbC4fz",target:"_blank",rel:"noopener noreferrer"}},[e._v("原维护者离任，Redis 迎来新的管理者和治理模式"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://xie.infoq.cn/article/b216f0107236d39ceb3887e03",target:"_blank",rel:"noopener noreferrer"}},[e._v("一文搞懂分布式消息中间件设计"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://xie.infoq.cn/article/7b483385fbdeec4578c40e594",target:"_blank",rel:"noopener noreferrer"}},[e._v("分布式系统架构设计 - 从 CAP 到 PACELC"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/9763cf3ec128",target:"_blank",rel:"noopener noreferrer"}},[e._v("IP 基础知识“全家桶”，45 张图一套带走"),r("OutboundLink")],1)])])]),e._v(" "),r("h2",{attrs:{id:"题外话"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题外话"}},[e._v("#")]),e._v(" 题外话")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("面试题")]),e._v(" "),r("div",{staticClass:"language-javascript line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token template-string"}},[r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("&& 、 ")]),r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")])]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("||")]),r("span",{pre:!0,attrs:{class:"token template-string"}},[r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v(" 和 ")]),r("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")])]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("` 运算符分别能做什么？\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v(" 和 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("undefined")]),e._v(" 的区别？\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])])]),e._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[e._v("点击查看答案")]),e._v(" "),r("ol",[r("li",[r("ul",[r("li",[r("code",[e._v("&&")]),e._v(" 叫逻辑与，在其操作数中找到第一个虚值表达式并返回它，如果没有找到任何虚值表达式，则返回最后一个真值表达式。它采用短路来防止不必要的工作。")]),e._v(" "),r("li",[r("code",[e._v("||")]),e._v(" 叫逻辑或，在其操作数中找到第一个真值表达式并返回它。这也使用了短路来防止不必要的工作。在支持 ES6 默认函数参数之前，它用于初始化函数中的默认参数值。")]),e._v(" "),r("li",[r("code",[e._v("!!")]),e._v(" 运算符可以将右侧的值强制转换为布尔值，这也是将值转换为布尔值的一种简单方法。")])])]),e._v(" "),r("li",[r("p",[e._v("首先 "),r("code",[e._v("Undefined")]),e._v(" 和 "),r("code",[e._v("Null")]),e._v(" 都是基本数据类型，这两个基本数据类型分别都只有一个值，就是 "),r("code",[e._v("undefined")]),e._v(" 和 "),r("code",[e._v("null")]),e._v("。")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("undefined")]),e._v(" 代表的含义是未定义，")]),e._v(" "),r("li",[r("code",[e._v("null")]),e._v(" 代表的含义是空对象（其实不是真的对象，请看下面的注意！）。一般变量声明了但还没有定义的时候会返回 "),r("code",[e._v("undefined")]),e._v(" ， "),r("code",[e._v("null")]),e._v(" 主要用于赋值给一些可能会返回对象的变量，作为初始化。")])]),e._v(" "),r("blockquote",[r("p",[e._v("其实 null 不是对象，虽然 typeof null 会输出 object，但是这只是 JS 存在的一个悠久 Bug。在 JS 的最初版本中使用的是 32 位系统，为了性能考虑使用低位存储变量的类型信息，000 开头代表是对象，然而 null 表示为全零，所以将它错误的判断为 object 。虽然现在的内部类型判断代码已经改变了，但是对于这个 Bug 却是一直流传下来。")])])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);